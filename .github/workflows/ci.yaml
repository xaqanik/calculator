name: Deploy to GCP

# Trigger this workflow on a push to the main branch
on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      # 1. Checkout your code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Authenticate to Google Cloud
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # 4. Run Terraform to provision the infrastructure
      - name: Terraform Apply
        id: terraform
        working-directory: ./terraform # Run commands in the terraform directory
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"
        
      # Extract the VM IP Address from Terraform's output
      - name: Get Instance IP
        id: get_ip
        working-directory: ./terraform
        run: |
          VM_IP=$(terraform output -raw instance_ip)
          echo "instance_ip=$VM_IP" >> $GITHUB_OUTPUT

      # 5. Run Ansible to configure the VM and deploy the app
      - name: Run Ansible Playbook
        env:
          # Use the IP address from the previous step
          VM_IP: ${{ steps.get_ip.outputs.instance_ip }}
        run: |
          # Write the SSH private key from GitHub Secrets to a file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          # Wait a bit for the VM to be ready for SSH connections
          sleep 30

          # Run the playbook
          ansible-playbook ansible/playbook.yml \
            -i "${VM_IP}," \
            --user ansible \
            --private-key private_key.pem \
            --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"