# .github/workflows/deploy.yml

name: Deploy to GCP

on:
  push:
    branches: [ master ]

jobs:
  test:
    # ... (test job is unchanged) ...
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push the image to Docker Hub
        run: |
          docker build -t "${{ secrets.DOCKER_USERNAME }}/calc:${{ github.sha }}" .
          docker push "${{ secrets.DOCKER_USERNAME }}/calc:${{ github.sha }}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform init -backend-config="bucket=${{ secrets.GCS_BUCKET_NAME }}"
          terraform apply -auto-approve \
            -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="gcs_bucket_name=${{ secrets.GCS_BUCKET_NAME }}"

      - name: Wait for GCP API to Register New VM
        run: sleep 100s

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Ansible + collections
        run: |
          python -m pip install --upgrade pip
          pip install "ansible>=9.0.0" google-auth-httplib2 requests
          ansible-galaxy collection install google.cloud community.docker

      # [FIX] Restored the env block to explicitly pass the SA Key.
      # Single quotes are used to prevent the shell from corrupting the JSON.
      - name: Check inventory (debug)
        working-directory: ./ansible
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: '${{ secrets.GCP_SA_KEY }}'
        run: ansible-inventory -i inventory.gcp_compute.yml --list

      # [FIX] Restored the env block to explicitly pass the SA Key.
      - name: Run Ansible Playbook
        working-directory: ./ansible
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SA_KEY: '${{ secrets.GCP_SA_KEY }}'
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          ansible-playbook playbook.yml \
           -i inventory.gcp_compute.yml \
           --user ansible \
           --private-key private_key.pem \
           --extra-vars "docker_image=${{ secrets.DOCKER_USERNAME }}/calc:${{ github.sha }}"