# .github/workflows/deploy.yml

name: Deploy to GCP

on:
  push:
    branches: [ master ]

jobs:
  # The 'test' job remains unchanged as it was already correct.
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test

  deploy:
    # This job depends on the 'test' job completing successfully
    needs: test
    runs-on: ubuntu-latest

    # These permissions are required for Workload Identity Federation
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # [CHANGE] Updated authentication to use Workload Identity Federation.
      # This is more secure as it uses short-lived tokens instead of a static JSON key.
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.WIF_POOL_ID }}/providers/${{ secrets.WIF_PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SA_EMAIL }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # [CHANGE] Specify the region for gcr.io to avoid potential ambiguity
      - name: Authorize Docker push
        run: gcloud auth configure-docker us-central1-docker.pkg.dev,gcr.io

      # [CHANGE] Updated the image path to be more explicit for Artifact Registry.
      # While gcr.io works, this format is more aligned with current GCP standards.
      - name: Build and push Docker image
        run: |
          docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/calculator:${{ github.sha }}" .
          docker push "gcr.io/${{ secrets.GCP_PROJECT_ID }}/calculator:${{ github.sha }}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform init -backend-config="bucket=${{ secrets.GCS_BUCKET_NAME }}"
          terraform apply -auto-approve \
            -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Ansible + collections
        run: |
          python -m pip install --upgrade pip
          pip install "ansible>=9.0.0" google-auth-httplib2 requests
          ansible-galaxy collection install google.cloud community.docker

      - name: Check inventory (debug)
        working-directory: ./ansible
        env:
          # Auth action already exports GOOGLE_APPLICATION_CREDENTIALS
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: ansible-inventory -i inventory.gcp_compute.yml --list

      - name: Run Ansible Playbook
        working-directory: ./ansible
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          ansible-playbook playbook.yml \
           -i inventory.gcp_compute.yml \
           --user ansible \
           --private-key private_key.pem \
           --extra-vars "docker_image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/calculator:${{ github.sha }}"
