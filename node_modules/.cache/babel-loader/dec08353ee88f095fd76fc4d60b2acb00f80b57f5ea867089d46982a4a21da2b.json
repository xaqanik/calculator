{"ast":null,"code":"import { flatten } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { isMatrix, isNumber } from '../../utils/is.js';\nimport { createRng } from './util/seededRNG.js';\nvar name = 'pickRandom';\nvar dependencies = ['typed', 'config', '?on'];\nexport var createPickRandom = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    on\n  } = _ref;\n  // seeded pseudo random number generator\n  var rng = createRng(config.randomSeed);\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = createRng(curr.randomSeed);\n      }\n    });\n  }\n\n  /**\n   * Random pick one or more values from a one dimensional array.\n   * Array elements are picked using a random function with uniform or weighted distribution.\n   *\n   * Syntax:\n   *\n   *     math.pickRandom(array)\n   *     math.pickRandom(array, number)\n   *     math.pickRandom(array, weights)\n   *     math.pickRandom(array, number, weights)\n   *     math.pickRandom(array, weights, number)\n   *     math.pickRandom(array, { weights, number, elementWise })\n   *\n   * Examples:\n   *\n   *     math.pickRandom([3, 6, 12, 2])                  // returns one of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], 2)               // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], { number: 2 })   // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1])    // returns one of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], 2, [1, 3, 2, 1]) // returns an array of two of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1], 2) // returns an array of two of the values in the array with weighted distribution\n   *\n   *     math.pickRandom([{x: 1.0, y: 2.0}, {x: 1.1, y: 2.0}], { elementWise: false })\n   *         // returns one of the items in the array\n   *\n   * See also:\n   *\n   *     random, randomInt\n   *\n   * @param {Array | Matrix} array     A one dimensional array\n   * @param {Int} number               An int or float\n   * @param {Array | Matrix} weights   An array of ints or floats\n   * @return {number | Array}          Returns a single random value from array when number is undefined.\n   *                                   Returns an array with the configured number of elements when number is defined.\n   */\n  return typed(name, {\n    'Array | Matrix': function Array__Matrix(possibles) {\n      return _pickRandom(possibles, {});\n    },\n    'Array | Matrix, Object': function Array__Matrix_Object(possibles, options) {\n      return _pickRandom(possibles, options);\n    },\n    'Array | Matrix, number': function Array__Matrix_number(possibles, number) {\n      return _pickRandom(possibles, {\n        number\n      });\n    },\n    'Array | Matrix, Array | Matrix': function Array__Matrix_Array__Matrix(possibles, weights) {\n      return _pickRandom(possibles, {\n        weights\n      });\n    },\n    'Array | Matrix, Array | Matrix, number': function Array__Matrix_Array__Matrix_number(possibles, weights, number) {\n      return _pickRandom(possibles, {\n        number,\n        weights\n      });\n    },\n    'Array | Matrix, number, Array | Matrix': function Array__Matrix_number_Array__Matrix(possibles, number, weights) {\n      return _pickRandom(possibles, {\n        number,\n        weights\n      });\n    }\n  });\n\n  /**\n   * @param {Array | Matrix} possibles\n   * @param {{\n   *   number?: number,\n   *   weights?: Array | Matrix,\n   *   elementWise: boolean\n   * }} options\n   * @returns {number | Array}\n   * @private\n   */\n  function _pickRandom(possibles, _ref2) {\n    var {\n      number,\n      weights,\n      elementWise = true\n    } = _ref2;\n    var single = typeof number === 'undefined';\n    if (single) {\n      number = 1;\n    }\n    var createMatrix = isMatrix(possibles) ? possibles.create : isMatrix(weights) ? weights.create : null;\n    possibles = possibles.valueOf(); // get Array\n    if (weights) {\n      weights = weights.valueOf(); // get Array\n    }\n    if (elementWise === true) {\n      possibles = flatten(possibles);\n      weights = flatten(weights);\n    }\n    var totalWeights = 0;\n    if (typeof weights !== 'undefined') {\n      if (weights.length !== possibles.length) {\n        throw new Error('Weights must have the same length as possibles');\n      }\n      for (var i = 0, len = weights.length; i < len; i++) {\n        if (!isNumber(weights[i]) || weights[i] < 0) {\n          throw new Error('Weights must be an array of positive numbers');\n        }\n        totalWeights += weights[i];\n      }\n    }\n    var length = possibles.length;\n    var result = [];\n    var pick;\n    while (result.length < number) {\n      if (typeof weights === 'undefined') {\n        pick = possibles[Math.floor(rng() * length)];\n      } else {\n        var randKey = rng() * totalWeights;\n        for (var _i = 0, _len = possibles.length; _i < _len; _i++) {\n          randKey -= weights[_i];\n          if (randKey < 0) {\n            pick = possibles[_i];\n            break;\n          }\n        }\n      }\n      result.push(pick);\n    }\n    return single ? result[0] : createMatrix ? createMatrix(result) : result;\n  }\n});","map":{"version":3,"names":["flatten","factory","isMatrix","isNumber","createRng","name","dependencies","createPickRandom","_ref","typed","config","on","rng","randomSeed","curr","prev","Array__Matrix","possibles","_pickRandom","Array__Matrix_Object","options","Array__Matrix_number","number","Array__Matrix_Array__Matrix","weights","Array__Matrix_Array__Matrix_number","Array__Matrix_number_Array__Matrix","_ref2","elementWise","single","createMatrix","create","valueOf","totalWeights","length","Error","i","len","result","pick","Math","floor","randKey","_i","_len","push"],"sources":["/home/xaqanik/test/node_modules/mathjs/lib/esm/function/probability/pickRandom.js"],"sourcesContent":["import { flatten } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { isMatrix, isNumber } from '../../utils/is.js';\nimport { createRng } from './util/seededRNG.js';\nvar name = 'pickRandom';\nvar dependencies = ['typed', 'config', '?on'];\nexport var createPickRandom = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    on\n  } = _ref;\n  // seeded pseudo random number generator\n  var rng = createRng(config.randomSeed);\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = createRng(curr.randomSeed);\n      }\n    });\n  }\n\n  /**\n   * Random pick one or more values from a one dimensional array.\n   * Array elements are picked using a random function with uniform or weighted distribution.\n   *\n   * Syntax:\n   *\n   *     math.pickRandom(array)\n   *     math.pickRandom(array, number)\n   *     math.pickRandom(array, weights)\n   *     math.pickRandom(array, number, weights)\n   *     math.pickRandom(array, weights, number)\n   *     math.pickRandom(array, { weights, number, elementWise })\n   *\n   * Examples:\n   *\n   *     math.pickRandom([3, 6, 12, 2])                  // returns one of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], 2)               // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], { number: 2 })   // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1])    // returns one of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], 2, [1, 3, 2, 1]) // returns an array of two of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1], 2) // returns an array of two of the values in the array with weighted distribution\n   *\n   *     math.pickRandom([{x: 1.0, y: 2.0}, {x: 1.1, y: 2.0}], { elementWise: false })\n   *         // returns one of the items in the array\n   *\n   * See also:\n   *\n   *     random, randomInt\n   *\n   * @param {Array | Matrix} array     A one dimensional array\n   * @param {Int} number               An int or float\n   * @param {Array | Matrix} weights   An array of ints or floats\n   * @return {number | Array}          Returns a single random value from array when number is undefined.\n   *                                   Returns an array with the configured number of elements when number is defined.\n   */\n  return typed(name, {\n    'Array | Matrix': function Array__Matrix(possibles) {\n      return _pickRandom(possibles, {});\n    },\n    'Array | Matrix, Object': function Array__Matrix_Object(possibles, options) {\n      return _pickRandom(possibles, options);\n    },\n    'Array | Matrix, number': function Array__Matrix_number(possibles, number) {\n      return _pickRandom(possibles, {\n        number\n      });\n    },\n    'Array | Matrix, Array | Matrix': function Array__Matrix_Array__Matrix(possibles, weights) {\n      return _pickRandom(possibles, {\n        weights\n      });\n    },\n    'Array | Matrix, Array | Matrix, number': function Array__Matrix_Array__Matrix_number(possibles, weights, number) {\n      return _pickRandom(possibles, {\n        number,\n        weights\n      });\n    },\n    'Array | Matrix, number, Array | Matrix': function Array__Matrix_number_Array__Matrix(possibles, number, weights) {\n      return _pickRandom(possibles, {\n        number,\n        weights\n      });\n    }\n  });\n\n  /**\n   * @param {Array | Matrix} possibles\n   * @param {{\n   *   number?: number,\n   *   weights?: Array | Matrix,\n   *   elementWise: boolean\n   * }} options\n   * @returns {number | Array}\n   * @private\n   */\n  function _pickRandom(possibles, _ref2) {\n    var {\n      number,\n      weights,\n      elementWise = true\n    } = _ref2;\n    var single = typeof number === 'undefined';\n    if (single) {\n      number = 1;\n    }\n    var createMatrix = isMatrix(possibles) ? possibles.create : isMatrix(weights) ? weights.create : null;\n    possibles = possibles.valueOf(); // get Array\n    if (weights) {\n      weights = weights.valueOf(); // get Array\n    }\n    if (elementWise === true) {\n      possibles = flatten(possibles);\n      weights = flatten(weights);\n    }\n    var totalWeights = 0;\n    if (typeof weights !== 'undefined') {\n      if (weights.length !== possibles.length) {\n        throw new Error('Weights must have the same length as possibles');\n      }\n      for (var i = 0, len = weights.length; i < len; i++) {\n        if (!isNumber(weights[i]) || weights[i] < 0) {\n          throw new Error('Weights must be an array of positive numbers');\n        }\n        totalWeights += weights[i];\n      }\n    }\n    var length = possibles.length;\n    var result = [];\n    var pick;\n    while (result.length < number) {\n      if (typeof weights === 'undefined') {\n        pick = possibles[Math.floor(rng() * length)];\n      } else {\n        var randKey = rng() * totalWeights;\n        for (var _i = 0, _len = possibles.length; _i < _len; _i++) {\n          randKey -= weights[_i];\n          if (randKey < 0) {\n            pick = possibles[_i];\n            break;\n          }\n        }\n      }\n      result.push(pick);\n    }\n    return single ? result[0] : createMatrix ? createMatrix(result) : result;\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}