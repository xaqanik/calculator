{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nvar name = 'oct';\nvar dependencies = ['typed', 'format'];\n\n/**\n * Format a number as octal.\n *\n * Syntax:\n *\n *    math.oct(value)\n *\n * Examples:\n *\n *    //the following outputs \"0o70\"\n *    math.oct(56)\n *\n * See also:\n *\n *    bin\n *    hex\n *\n * @param {number | BigNumber} value    Value to be stringified\n * @param {number | BigNumber} wordSize Optional word size (see `format`)\n * @return {string}         The formatted value\n */\n\nexport var createOct = factory(name, dependencies, _ref => {\n  var {\n    typed,\n    format\n  } = _ref;\n  return typed(name, {\n    'number | BigNumber': function number__BigNumber(n) {\n      return format(n, {\n        notation: 'oct'\n      });\n    },\n    'number | BigNumber, number | BigNumber': function number__BigNumber_number__BigNumber(n, wordSize) {\n      return format(n, {\n        notation: 'oct',\n        wordSize\n      });\n    }\n  });\n});","map":{"version":3,"names":["factory","name","dependencies","createOct","_ref","typed","format","number__BigNumber","n","notation","number__BigNumber_number__BigNumber","wordSize"],"sources":["/home/xaqanik/test/node_modules/mathjs/lib/esm/function/string/oct.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nvar name = 'oct';\nvar dependencies = ['typed', 'format'];\n\n/**\n * Format a number as octal.\n *\n * Syntax:\n *\n *    math.oct(value)\n *\n * Examples:\n *\n *    //the following outputs \"0o70\"\n *    math.oct(56)\n *\n * See also:\n *\n *    bin\n *    hex\n *\n * @param {number | BigNumber} value    Value to be stringified\n * @param {number | BigNumber} wordSize Optional word size (see `format`)\n * @return {string}         The formatted value\n */\n\nexport var createOct = factory(name, dependencies, _ref => {\n  var {\n    typed,\n    format\n  } = _ref;\n  return typed(name, {\n    'number | BigNumber': function number__BigNumber(n) {\n      return format(n, {\n        notation: 'oct'\n      });\n    },\n    'number | BigNumber, number | BigNumber': function number__BigNumber_number__BigNumber(n, wordSize) {\n      return format(n, {\n        notation: 'oct',\n        wordSize\n      });\n    }\n  });\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,SAAS,GAAGH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACzD,IAAI;IACFC,KAAK;IACLC;EACF,CAAC,GAAGF,IAAI;EACR,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjB,oBAAoB,EAAE,SAASM,iBAAiBA,CAACC,CAAC,EAAE;MAClD,OAAOF,MAAM,CAACE,CAAC,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;IACD,wCAAwC,EAAE,SAASC,mCAAmCA,CAACF,CAAC,EAAEG,QAAQ,EAAE;MAClG,OAAOL,MAAM,CAACE,CAAC,EAAE;QACfC,QAAQ,EAAE,KAAK;QACfE;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}