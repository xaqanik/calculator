{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nvar name = 'zpk2tf';\nvar dependencies = ['typed', 'add', 'multiply', 'Complex', 'number'];\nexport var createZpk2tf = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    multiply,\n    Complex,\n    number\n  } = _ref;\n  /**\n     * Compute the transfer function of a zero-pole-gain model.\n     *\n     * Syntax:\n     *      math.zpk2tf(z, p, k)\n     *\n     * Examples:\n     *    math.zpk2tf([1, 2], [-1, -2], 1)    // returns [[1, -3, 2], [1, 3, 2]]\n     *\n     * See also:\n     *   freqz\n     *\n     * @param {Array} z Array of zeros values\n     * @param {Array} p Array of poles values\n     * @param {number} k Gain value\n     * @return {Array} Two dimensional array containing the numerator (first row) and denominator (second row) polynomials\n     *\n     */\n  return typed(name, {\n    'Array,Array,number': function ArrayArrayNumber(z, p, k) {\n      return _zpk2tf(z, p, k);\n    },\n    'Array,Array': function ArrayArray(z, p) {\n      return _zpk2tf(z, p, 1);\n    },\n    'Matrix,Matrix,number': function MatrixMatrixNumber(z, p, k) {\n      return _zpk2tf(z.valueOf(), p.valueOf(), k);\n    },\n    'Matrix,Matrix': function MatrixMatrix(z, p) {\n      return _zpk2tf(z.valueOf(), p.valueOf(), 1);\n    }\n  });\n  function _zpk2tf(z, p, k) {\n    // if z is bignumber, convert it to number\n    if (z.some(el => el.type === 'BigNumber')) {\n      z = z.map(el => number(el));\n    }\n    // if p is bignumber, convert it to number\n    if (p.some(el => el.type === 'BigNumber')) {\n      p = p.map(el => number(el));\n    }\n    var num = [Complex(1, 0)];\n    var den = [Complex(1, 0)];\n    for (var i = 0; i < z.length; i++) {\n      var zero = z[i];\n      if (typeof zero === 'number') zero = Complex(zero, 0);\n      num = _multiply(num, [Complex(1, 0), Complex(-zero.re, -zero.im)]);\n    }\n    for (var _i = 0; _i < p.length; _i++) {\n      var pole = p[_i];\n      if (typeof pole === 'number') pole = Complex(pole, 0);\n      den = _multiply(den, [Complex(1, 0), Complex(-pole.re, -pole.im)]);\n    }\n    for (var _i2 = 0; _i2 < num.length; _i2++) {\n      num[_i2] = multiply(num[_i2], k);\n    }\n    return [num, den];\n  }\n  function _multiply(a, b) {\n    var c = [];\n    for (var i = 0; i < a.length + b.length - 1; i++) {\n      c[i] = Complex(0, 0);\n      for (var j = 0; j < a.length; j++) {\n        if (i - j >= 0 && i - j < b.length) {\n          c[i] = add(c[i], multiply(a[j], b[i - j]));\n        }\n      }\n    }\n    return c;\n  }\n});","map":{"version":3,"names":["factory","name","dependencies","createZpk2tf","_ref","typed","add","multiply","Complex","number","ArrayArrayNumber","z","p","k","_zpk2tf","ArrayArray","MatrixMatrixNumber","valueOf","MatrixMatrix","some","el","type","map","num","den","i","length","zero","_multiply","re","im","_i","pole","_i2","a","b","c","j"],"sources":["/home/xaqanik/test/node_modules/mathjs/lib/esm/function/signal/zpk2tf.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nvar name = 'zpk2tf';\nvar dependencies = ['typed', 'add', 'multiply', 'Complex', 'number'];\nexport var createZpk2tf = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    multiply,\n    Complex,\n    number\n  } = _ref;\n  /**\n     * Compute the transfer function of a zero-pole-gain model.\n     *\n     * Syntax:\n     *      math.zpk2tf(z, p, k)\n     *\n     * Examples:\n     *    math.zpk2tf([1, 2], [-1, -2], 1)    // returns [[1, -3, 2], [1, 3, 2]]\n     *\n     * See also:\n     *   freqz\n     *\n     * @param {Array} z Array of zeros values\n     * @param {Array} p Array of poles values\n     * @param {number} k Gain value\n     * @return {Array} Two dimensional array containing the numerator (first row) and denominator (second row) polynomials\n     *\n     */\n  return typed(name, {\n    'Array,Array,number': function ArrayArrayNumber(z, p, k) {\n      return _zpk2tf(z, p, k);\n    },\n    'Array,Array': function ArrayArray(z, p) {\n      return _zpk2tf(z, p, 1);\n    },\n    'Matrix,Matrix,number': function MatrixMatrixNumber(z, p, k) {\n      return _zpk2tf(z.valueOf(), p.valueOf(), k);\n    },\n    'Matrix,Matrix': function MatrixMatrix(z, p) {\n      return _zpk2tf(z.valueOf(), p.valueOf(), 1);\n    }\n  });\n  function _zpk2tf(z, p, k) {\n    // if z is bignumber, convert it to number\n    if (z.some(el => el.type === 'BigNumber')) {\n      z = z.map(el => number(el));\n    }\n    // if p is bignumber, convert it to number\n    if (p.some(el => el.type === 'BigNumber')) {\n      p = p.map(el => number(el));\n    }\n    var num = [Complex(1, 0)];\n    var den = [Complex(1, 0)];\n    for (var i = 0; i < z.length; i++) {\n      var zero = z[i];\n      if (typeof zero === 'number') zero = Complex(zero, 0);\n      num = _multiply(num, [Complex(1, 0), Complex(-zero.re, -zero.im)]);\n    }\n    for (var _i = 0; _i < p.length; _i++) {\n      var pole = p[_i];\n      if (typeof pole === 'number') pole = Complex(pole, 0);\n      den = _multiply(den, [Complex(1, 0), Complex(-pole.re, -pole.im)]);\n    }\n    for (var _i2 = 0; _i2 < num.length; _i2++) {\n      num[_i2] = multiply(num[_i2], k);\n    }\n    return [num, den];\n  }\n  function _multiply(a, b) {\n    var c = [];\n    for (var i = 0; i < a.length + b.length - 1; i++) {\n      c[i] = Complex(0, 0);\n      for (var j = 0; j < a.length; j++) {\n        if (i - j >= 0 && i - j < b.length) {\n          c[i] = add(c[i], multiply(a[j], b[i - j]));\n        }\n      }\n    }\n    return c;\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}