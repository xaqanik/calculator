{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nvar name = 'freqz';\nvar dependencies = ['typed', 'add', 'multiply', 'Complex', 'divide', 'matrix'];\nexport var createFreqz = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    multiply,\n    Complex,\n    divide,\n    matrix\n  } = _ref;\n  /**\n     * Calculates the frequency response of a filter given its numerator and denominator coefficients.\n     *\n     * Syntax:\n     *    math.freqz(b, a)\n     *    math.freqz(b, a, w)\n     *\n     * Examples:\n     *   math.freqz([1, 2], [1, 2, 3], 4) // returns { h: [0.5 + 0i, 0.4768589245763655 + 0.2861153547458193i, 0.25000000000000006 + 0.75i, -0.770976571635189 + 0.4625859429811135i], w: [0, 0.7853981633974483, 1.5707963267948966, 2.356194490192345 ] }\n     *   math.freqz([1, 2], [1, 2, 3], [0, 1]) // returns { h: [0.5 + 0i, 0.45436781 + 0.38598051i], w: [0, 1] }\n     *\n     * See also:\n     *  zpk2tf\n     *\n     * @param {Array.<number>} b The numerator coefficients of the filter.\n     * @param {Array.<number>} a The denominator coefficients of the filter.\n     * @param {Array.<number>} [w] A vector of frequencies (in radians/sample) at which the frequency response is to be computed or the number of points to compute (if a number is not provided, the default is 512 points)\n     * @returns {Object} An object with two properties: h, a vector containing the complex frequency response, and w, a vector containing the normalized frequencies (in radians/sample) at which the response was computed.\n     *\n     *\n     */\n  return typed(name, {\n    'Array, Array': function Array_Array(b, a) {\n      var w = createBins(512);\n      return _freqz(b, a, w);\n    },\n    'Array, Array, Array': function Array_Array_Array(b, a, w) {\n      return _freqz(b, a, w);\n    },\n    'Array, Array, number': function Array_Array_number(b, a, w) {\n      if (w < 0) {\n        throw new Error('w must be a positive number');\n      }\n      var w2 = createBins(w);\n      return _freqz(b, a, w2);\n    },\n    'Matrix, Matrix': function Matrix_Matrix(b, a) {\n      // console.log('here')\n      var _w = createBins(512);\n      var {\n        w,\n        h\n      } = _freqz(b.valueOf(), a.valueOf(), _w);\n      return {\n        w: matrix(w),\n        h: matrix(h)\n      };\n    },\n    'Matrix, Matrix, Matrix': function Matrix_Matrix_Matrix(b, a, w) {\n      var {\n        h\n      } = _freqz(b.valueOf(), a.valueOf(), w.valueOf());\n      return {\n        h: matrix(h),\n        w: matrix(w)\n      };\n    },\n    'Matrix, Matrix, number': function Matrix_Matrix_number(b, a, w) {\n      if (w < 0) {\n        throw new Error('w must be a positive number');\n      }\n      var _w = createBins(w);\n      var {\n        h\n      } = _freqz(b.valueOf(), a.valueOf(), _w);\n      return {\n        h: matrix(h),\n        w: matrix(_w)\n      };\n    }\n  });\n  function _freqz(b, a, w) {\n    var num = [];\n    var den = [];\n    for (var i = 0; i < w.length; i++) {\n      var sumNum = Complex(0, 0);\n      var sumDen = Complex(0, 0);\n      for (var j = 0; j < b.length; j++) {\n        sumNum = add(sumNum, multiply(b[j], Complex(Math.cos(-j * w[i]), Math.sin(-j * w[i]))));\n      }\n      for (var _j = 0; _j < a.length; _j++) {\n        sumDen = add(sumDen, multiply(a[_j], Complex(Math.cos(-_j * w[i]), Math.sin(-_j * w[i]))));\n      }\n      num.push(sumNum);\n      den.push(sumDen);\n    }\n    var h = [];\n    for (var _i = 0; _i < num.length; _i++) {\n      h.push(divide(num[_i], den[_i]));\n    }\n    return {\n      h,\n      w\n    };\n  }\n  function createBins(n) {\n    var bins = [];\n    for (var i = 0; i < n; i++) {\n      bins.push(i / n * Math.PI);\n    }\n    return bins;\n  }\n});","map":{"version":3,"names":["factory","name","dependencies","createFreqz","_ref","typed","add","multiply","Complex","divide","matrix","Array_Array","b","a","w","createBins","_freqz","Array_Array_Array","Array_Array_number","Error","w2","Matrix_Matrix","_w","h","valueOf","Matrix_Matrix_Matrix","Matrix_Matrix_number","num","den","i","length","sumNum","sumDen","j","Math","cos","sin","_j","push","_i","n","bins","PI"],"sources":["/home/xaqanik/test/node_modules/mathjs/lib/esm/function/signal/freqz.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nvar name = 'freqz';\nvar dependencies = ['typed', 'add', 'multiply', 'Complex', 'divide', 'matrix'];\nexport var createFreqz = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    multiply,\n    Complex,\n    divide,\n    matrix\n  } = _ref;\n  /**\n     * Calculates the frequency response of a filter given its numerator and denominator coefficients.\n     *\n     * Syntax:\n     *    math.freqz(b, a)\n     *    math.freqz(b, a, w)\n     *\n     * Examples:\n     *   math.freqz([1, 2], [1, 2, 3], 4) // returns { h: [0.5 + 0i, 0.4768589245763655 + 0.2861153547458193i, 0.25000000000000006 + 0.75i, -0.770976571635189 + 0.4625859429811135i], w: [0, 0.7853981633974483, 1.5707963267948966, 2.356194490192345 ] }\n     *   math.freqz([1, 2], [1, 2, 3], [0, 1]) // returns { h: [0.5 + 0i, 0.45436781 + 0.38598051i], w: [0, 1] }\n     *\n     * See also:\n     *  zpk2tf\n     *\n     * @param {Array.<number>} b The numerator coefficients of the filter.\n     * @param {Array.<number>} a The denominator coefficients of the filter.\n     * @param {Array.<number>} [w] A vector of frequencies (in radians/sample) at which the frequency response is to be computed or the number of points to compute (if a number is not provided, the default is 512 points)\n     * @returns {Object} An object with two properties: h, a vector containing the complex frequency response, and w, a vector containing the normalized frequencies (in radians/sample) at which the response was computed.\n     *\n     *\n     */\n  return typed(name, {\n    'Array, Array': function Array_Array(b, a) {\n      var w = createBins(512);\n      return _freqz(b, a, w);\n    },\n    'Array, Array, Array': function Array_Array_Array(b, a, w) {\n      return _freqz(b, a, w);\n    },\n    'Array, Array, number': function Array_Array_number(b, a, w) {\n      if (w < 0) {\n        throw new Error('w must be a positive number');\n      }\n      var w2 = createBins(w);\n      return _freqz(b, a, w2);\n    },\n    'Matrix, Matrix': function Matrix_Matrix(b, a) {\n      // console.log('here')\n      var _w = createBins(512);\n      var {\n        w,\n        h\n      } = _freqz(b.valueOf(), a.valueOf(), _w);\n      return {\n        w: matrix(w),\n        h: matrix(h)\n      };\n    },\n    'Matrix, Matrix, Matrix': function Matrix_Matrix_Matrix(b, a, w) {\n      var {\n        h\n      } = _freqz(b.valueOf(), a.valueOf(), w.valueOf());\n      return {\n        h: matrix(h),\n        w: matrix(w)\n      };\n    },\n    'Matrix, Matrix, number': function Matrix_Matrix_number(b, a, w) {\n      if (w < 0) {\n        throw new Error('w must be a positive number');\n      }\n      var _w = createBins(w);\n      var {\n        h\n      } = _freqz(b.valueOf(), a.valueOf(), _w);\n      return {\n        h: matrix(h),\n        w: matrix(_w)\n      };\n    }\n  });\n  function _freqz(b, a, w) {\n    var num = [];\n    var den = [];\n    for (var i = 0; i < w.length; i++) {\n      var sumNum = Complex(0, 0);\n      var sumDen = Complex(0, 0);\n      for (var j = 0; j < b.length; j++) {\n        sumNum = add(sumNum, multiply(b[j], Complex(Math.cos(-j * w[i]), Math.sin(-j * w[i]))));\n      }\n      for (var _j = 0; _j < a.length; _j++) {\n        sumDen = add(sumDen, multiply(a[_j], Complex(Math.cos(-_j * w[i]), Math.sin(-_j * w[i]))));\n      }\n      num.push(sumNum);\n      den.push(sumDen);\n    }\n    var h = [];\n    for (var _i = 0; _i < num.length; _i++) {\n      h.push(divide(num[_i], den[_i]));\n    }\n    return {\n      h,\n      w\n    };\n  }\n  function createBins(n) {\n    var bins = [];\n    for (var i = 0; i < n; i++) {\n      bins.push(i / n * Math.PI);\n    }\n    return bins;\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}