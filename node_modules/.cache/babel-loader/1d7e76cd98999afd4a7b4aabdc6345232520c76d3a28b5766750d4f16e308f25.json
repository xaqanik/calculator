{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMax } from '../../function/statistics/max.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'max';\nvar dependencies = ['typed', 'config', 'numeric', 'larger', 'isNaN'];\nexport var createMaxTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    numeric,\n    larger,\n    isNaN: mathIsNaN\n  } = _ref;\n  var max = createMax({\n    typed,\n    config,\n    numeric,\n    larger,\n    isNaN: mathIsNaN\n  });\n\n  /**\n   * Attach a transform function to math.max\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function max\n   * from one-based to zero based\n   */\n  return typed('max', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return max.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createMax","lastDimToZeroBase","name","dependencies","createMaxTransform","_ref","typed","config","numeric","larger","isNaN","mathIsNaN","max","any","args","apply","err","isTransformFunction"],"sources":["/home/xaqanik/test/node_modules/mathjs/lib/esm/expression/transform/max.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMax } from '../../function/statistics/max.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'max';\nvar dependencies = ['typed', 'config', 'numeric', 'larger', 'isNaN'];\nexport var createMaxTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    numeric,\n    larger,\n    isNaN: mathIsNaN\n  } = _ref;\n  var max = createMax({\n    typed,\n    config,\n    numeric,\n    larger,\n    isNaN: mathIsNaN\n  });\n\n  /**\n   * Attach a transform function to math.max\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function max\n   * from one-based to zero based\n   */\n  return typed('max', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return max.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC;AACpE,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACjF,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,OAAO;IACPC,MAAM;IACNC,KAAK,EAAEC;EACT,CAAC,GAAGN,IAAI;EACR,IAAIO,GAAG,GAAGZ,SAAS,CAAC;IAClBM,KAAK;IACLC,MAAM;IACNC,OAAO;IACPC,MAAM;IACNC,KAAK,EAAEC;EACT,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAOL,KAAK,CAAC,KAAK,EAAE;IAClB,QAAQ,EAAE,SAASO,GAAGA,CAACC,IAAI,EAAE;MAC3BA,IAAI,GAAGb,iBAAiB,CAACa,IAAI,CAAC;MAC9B,IAAI;QACF,OAAOF,GAAG,CAACG,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAMjB,cAAc,CAACiB,GAAG,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDC,mBAAmB,EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}